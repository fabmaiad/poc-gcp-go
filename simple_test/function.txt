package main

// [START pubsub_publisher_concurrency_control]
import (
	"context"
	"fmt"

	"cloud.google.com/go/pubsub"
)

func main() {
	projectID := "bullla-one-d-apps-cn-92c3"
	topicID := "topic1-poc-golang" //"topic1-poc-golang"
	msg := "Hello World"

	ctx := context.Background()
	client, err := pubsub.NewClient(ctx, projectID)
	if err != nil {
		fmt.Printf("pubsub.NewClient: %s", err)
		return
	}
	defer client.Close()

	t := client.Topic(topicID)
	t.PublishSettings.NumGoroutines = 1

	result := t.Publish(ctx, &pubsub.Message{Data: []byte(msg)})
	// Block until the result is returned and a server-generated
	// ID is returned for the published message.
	id, err := result.Get(ctx)
	if err != nil {
		fmt.Printf("Get: %s", err)
		return
	}
	fmt.Printf("Published a message; msg ID: %v\n", id)
	return
}

// [END pubsub_publisher_concurrency_control]
